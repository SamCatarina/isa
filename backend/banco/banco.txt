CREATE DATABASE questaoai;
USE questaoai;

-- Tabela de Perguntas
CREATE TABLE IF NOT EXISTS perguntas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    pergunta VARCHAR(255),
    alternativa_a VARCHAR(255),
    alternativa_b VARCHAR(255),
    alternativa_c VARCHAR(255),
    alternativa_d VARCHAR(255),
    resposta_correta CHAR(1),
    tag_1 VARCHAR(255),
    tag_2 VARCHAR(255),
    tag_3 VARCHAR(255)
);

-- Tabela de Professores
CREATE TABLE IF NOT EXISTS professores (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    senha VARCHAR(255) NOT NULL
);

-- Tabela de Alunos
CREATE TABLE IF NOT EXISTS alunos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    senha VARCHAR(255) NOT NULL
);

-- Tabela de Turmas
CREATE TABLE IF NOT EXISTS turmas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    professor_id INT,
    codigo INT NOT NULL UNIQUE,
    FOREIGN KEY (professor_id) REFERENCES professores(id)
);

-- Tabela de Associação entre Turmas e Alunos
CREATE TABLE IF NOT EXISTS turma_alunos (
    turma_id INT,
    aluno_id INT,
    PRIMARY KEY (turma_id, aluno_id),
    FOREIGN KEY (turma_id) REFERENCES turmas(id),
    FOREIGN KEY (aluno_id) REFERENCES alunos(id)
);

-- Tabela de Listas de Perguntas
CREATE TABLE IF NOT EXISTS listas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL
);

-- Tabela de Associação entre Listas e Perguntas
CREATE TABLE IF NOT EXISTS lista_perguntas (
    lista_id INT,
    pergunta_id INT,
    PRIMARY KEY (lista_id, pergunta_id),
    FOREIGN KEY (lista_id) REFERENCES listas(id),
    FOREIGN KEY (pergunta_id) REFERENCES perguntas(id)
);

-- Tabela de Associação entre Turmas e Listas
CREATE TABLE IF NOT EXISTS turma_listas (
    turma_id INT,
    lista_id INT,
    PRIMARY KEY (turma_id, lista_id),
    FOREIGN KEY (turma_id) REFERENCES turmas(id),
    FOREIGN KEY (lista_id) REFERENCES listas(id)
);

-- Tabela de Respostas
CREATE TABLE IF NOT EXISTS respostas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    aluno_id INT,
    pergunta_id INT,
    lista_id INT,
    resposta CHAR(1),
    FOREIGN KEY (aluno_id) REFERENCES alunos(id),
    FOREIGN KEY (pergunta_id) REFERENCES perguntas(id),
    FOREIGN KEY (lista_id) REFERENCES listas(id)
);

-- Alteração do Banco

ALTER TABLE `questaoai`.`alunos` 
ADD COLUMN `material_formato` VARCHAR(45) NOT NULL AFTER `senha`,
ADD COLUMN `turno` VARCHAR(45) NOT NULL AFTER `material_formato`;

CREATE TABLE IF NOT EXISTS resultado_listas (
  id INT NOT NULL AUTO_INCREMENT  PRIMARY KEY,
  aluno_id INT NOT NULL,
  lista_id INT NOT NULL,
  tags TEXT,
  tagCons TEXT,
  turno VARCHAR(45) NOT NULL,
  FOREIGN KEY (aluno_id) REFERENCES alunos(id),
  FOREIGN KEY (lista_id) REFERENCES listas(id)
  );
  
  CREATE TABLE IF NOT EXISTS referencias (
  id INT NOT NULL AUTO_INCREMENT  PRIMARY KEY,
  turma_id INT NOT NULL,
  lista_id INT NOT NULL,
  ref VARCHAR(255),
  tag VARCHAR(255),
  formato VARCHAR(255),
  FOREIGN KEY (turma_id) REFERENCES turmas(id)
  FOREIGN KEY (lista_id) REFERENCES listas(id)
  );